---
- name: Include OS-specific variables.
  include_vars: "vars/{{ ansible_os_family }}.yml"

# Setup/install tasks.
- include_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- include_tasks: setup-Ubuntu.yml
  when: ansible_distribution == 'Ubuntu'

- include_tasks: setup-Debian.yml
  when: ansible_distribution == 'Debian'

- name: Install NGINX
  package:
    name: nginx
    update_cache: yes
    state: present

- name: Ensure nginx is started and enabled on boot
  service:
    name: nginx
    state: started
    enabled: true

# @TODO: Stop writing to /etc/nginx/nginx.conf... This kind of thing should be put into conf.d files.
- name: Increase value of server_names_hash_bucket_size
  replace:
    dest: /etc/nginx/nginx.conf
    regexp: '# server_names_hash_bucket_size \d+'
    replace: 'server_names_hash_bucket_size {{ nginx_server_names_hash_bucket_size }}'
  notify:
    - safe reload nginx

- name: Hide NGINX version
  copy:
    dest: /etc/nginx/conf.d/hide-nginx-version.conf
    content: >
      server_tokens off;
    force: true
    backup: true
    mode: 0644
    owner: root
    group: root
  notify:
    - safe reload nginx

- name: Provide alternate nginx log format for use when running behind a load balancer
  copy:
    src: "{{ role_path }}/files/etc/nginx/conf.d/log_format_proxied.conf"
    dest: /etc/nginx/conf.d/log_format_proxied.conf
  notify: safe reload nginx

- name: Configure /etc/nginx/includes/robots.conf
  template:
    src: "{{ role_path }}/templates/etc/nginx/includes/robots.conf.j2"
    dest: /etc/nginx/includes/robots.conf
    owner: root
    group: root
    backup: true
  when: nginx_robots_policy is defined
    and nginx_robots_policy in ['development', 'staging', 'production']
  ignore_errors: true

- name: Enable gzip compression on more than just text/html type
  template:
    src: "etc/nginx/conf.d/gzip_types.conf.j2"
    dest: /etc/nginx/conf.d/gzip_types.conf
    owner: root
    group: root
    mode: '0644'
    backup: true
  notify:
    - safe reload nginx

- name: "Remove {{ nginx_deny_anonymous_conf_path }} when it's not being used."
  file:
    path: "{{ nginx_deny_anonymous_conf_path }}"
    state: absent
  notify: safe reload nginx
  when: nginx_global_username == ''
  tags:
    - nginx_auth_basic

- include_tasks: "{{ role_path }}/tasks/auth_basic.yml"
  when: nginx_global_username != ''
  tags:
    - nginx_auth_basic
